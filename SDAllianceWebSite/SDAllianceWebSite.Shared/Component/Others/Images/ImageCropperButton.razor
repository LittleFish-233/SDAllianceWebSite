@inject DialogService DialogService
@inject ToastService ToastService
@inject IAppHelper _appHelper;

<div class="mb-3">
    <InputFile class="form-control form-control-lg d-none" id="@Id" OnChange="OnInputFileChange"></InputFile>
</div>
<div class="card text-black" style="background-color:transparent;">
    <img src="@ImagePath" class="card-img" alt="...">
    <div class="card-img-overlay">
        @if (Type == ImageAspectType.None)
        {
            @if (IsMustCropper)
            {
               <div class="d-ssr">
                    <label for="@Id" class="btn btn-success mb-4"><i class="fa fa-upload" aria-hidden="true"></i> @Text</label>
                </div>

      
          <div class="d-wasm">

                    <ButtonUpload TValue="string" Accept="image/gif, image/jpeg, image/jpg, image/png" IsSingle="true" BrowserButtonIcon="fa fa-upload"
                                  OnChange="@OnCardUploadMain" OnDelete="@(fileName => Task.FromResult(true))" BrowserButtonText="@Text" ShowLabel="false"></ButtonUpload>

                </div>
     
   

            }
            else
            {
                <ImageUpLoadButton OnUploadedImage="OnUploaded" Text="@Text"></ImageUpLoadButton>
            }
        }
        else
        {
             <div class="d-ssr">
                <label for="@Id" class="btn btn-success mb-4"><i class="fa fa-upload" aria-hidden="true"></i> @Text</label>
            </div>

          <div class="d-wasm">

                <ButtonUpload TValue="string" Accept="image/gif, image/jpeg, image/jpg, image/png" IsSingle="true" BrowserButtonIcon="fa fa-upload"
                              OnChange="@OnCardUploadMain" OnDelete="@(fileName => Task.FromResult(true))" BrowserButtonText="@Text" ShowLabel="false"></ButtonUpload>

            </div>
             
          }
           
        
    </div>
</div>
@code {
    [Parameter]
    public ImageAspectType Type { get; set; }
    [Parameter]
    public bool IsMainImage { get; set; }
    [Parameter]
    public string ImagePath { get; set; }
    [Parameter]
    public bool IsMustCropper { get; set; }
    [Parameter]
    public string Text { get; set; } = "上传图片";


    [Parameter]
    public EventCallback<string> OnUploadedImage { get; set; }

    public string Id = "input" + new Random().Next();

    private async void OnInputFileChange(InputFileChangeEventArgs args)
    {
       
        var option = new DialogOption()
        {
            Title = "裁剪图片",
            ShowCloseButton = false
        };
        option.BodyTemplate = BootstrapDynamicComponent.CreateComponent<ImageCropperViewTip>(new KeyValuePair<string, object>[]
        {
                new(nameof(ImageCropperViewTip.Type),Type),
                new(nameof(ImageCropperViewTip.file),args.File),
                new(nameof(ImageCropperViewTip.OnUploadedImage), EventCallback.Factory.Create<string>(this, async (url) => await OnUploaded(url))),
                new(nameof(ImageCropperViewTip.OnClickClose), EventCallback.Factory.Create(this, async () => await option.Dialog.Close()))
                        }).Render();
        await DialogService.Show(option);
    }

    public async Task OnUploaded(string url)
    {
        ImagePath = url;
        StateHasChanged();
        await OnUploadedImage.InvokeAsync(url);
    }

    private async Task OnCardUploadMain(UploadFile file)
    {
        try
        {
            //判断类型
            string url = "api/files/postfile";
            url += Type.GetDisplayName();

            List<UploadResult> obj = await _appHelper.UploadFilesAsync(new List<IBrowserFile> { file.File }, 15 * 1024 * 1024, 1, ToolHelper.WebApiPath + url);
            if (obj[0].Uploaded == true)
            {
                ImagePath = obj[0].FileURL;
                await OnUploadedImage.InvokeAsync(obj[0].FileURL);
                StateHasChanged();
            }
            else
            {
                await ToastService.Error("图片上传失败", $"<{file.FileName}> " + obj[0].Error);
            }

        }
        catch(Exception exc)
        {
            await ToastService.Error("图片上传失败", "图片上传失败，超过1MB的图片请上传到相册，请检查网络正常后联系管理员");
        }
    }
}
