@inject NavigationManager NavigationManager

<div class="div-shadow rounded  ps-4 pe-4 pt-3 pb-3 mb-3 bg-opacity" style=" font-size: 16px; font-weight: 300; cursor: default">
    <div class="new-row-warp no-margin">
        <div>
            <img class=" shadow -sm" src="@Model.Image"
                 style="height: 60px;width: 60px;border-radius: 50%;" />
        </div>
        <div class="comment-tx-div">
            <div class="new-row-warp no-margin">
                <div class="comment-username">@Model.Title</div>
            </div>
            <div class="comment-time">@Model.PostTime.ToString("yyy-MM-dd H:mm")</div>
        </div>
        <div class="mt-2 col-12 no-padding">
            <div class="tui-editor-contents">
                @((MarkupString)Model.Text)
            </div>
        </div>
        <div class="col-12 no-padding">
            @if (IsReplying)
            {
                <button class="comment-reply comment-reply-color" style="float: right;" @onclick="OnUnReplyClick">取消回复</button>
            }
            else
            {
                <button class="comment-reply comment-reply-color" style="float: right;" @onclick="OnReplyClick">回复</button>
            }
        </div>
        @if (IsReplying)
        {
            <ReplyCommentTip ObjectId="@CommentId.ToString()" IsChild="true" Type="CommentType.ReplyComment" RelyCallBack="OnRely"></ReplyCommentTip>
        }
    </div>
</div>

@code {
    [Parameter]
    public SDAllianceWebSite.Shared.Model.Message Model { get; set; }

    [Parameter]
    public long CommentId { get; set; }

    private bool IsReplying { get; set; }

    public void OnReplyClick()
    {
        IsReplying = true;
        StateHasChanged();
    }

    public void OnUnReplyClick()
    {
        IsReplying = false;
        StateHasChanged();
    }

    public void OnRely()
    {
        IsReplying = false;
        StateHasChanged();
    }
    
}
